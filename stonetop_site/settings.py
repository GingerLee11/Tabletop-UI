"""
Django settings for stonetop_site project.

Generated by 'django-admin startproject' using Django 4.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from django.contrib.messages import constants as messages

from pathlib import Path
import environ

# Set message tags
MESSAGE_TAGS = {
        messages.DEBUG: 'alert-secondary',
        messages.INFO: 'alert-info',
        messages.SUCCESS: 'alert-success',
        messages.WARNING: 'alert-warning',
        messages.ERROR: 'alert-danger',
 }

# Initialize environment variables

env = environ.Env()

environ.Env.read_env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
if env('DJANGO_DEBUG_FALSE') == 'False':
    DEBUG = True
    ALLOWED_HOSTS = [env('SITE_HOST')]
    HOST = env('SITE_HOST')
    DOMAIN = env('SITE_HOST')
    CSRF_TRUSTED_ORIGINS = [
        'https://stonetop.herokuapp.com'
    ]
    # Email settings
    # SENDGRID_API_KEY=env('SENDGRID_API_KEY')
    EMAIL_BACKEND=env('EMAIL_BACKEND')
    DEFAULT_FROM_EMAIL = env('DEFAULT_FROM_EMAIL')
    PROTOCOL = "https"
    EMAIL_HOST = env('EMAIL_HOST')
    EMAIL_USE_TLS = True
    EMAIL_PORT = 587
    EMAIL_HOST_USER = env('SENDGRID_USERNAME')
    EMAIL_HOST_PASSWORD = env('SENDGRID_API_KEY')
else:
    DEBUG = True
    ALLOWED_HOSTS = []
    HOST = 'localhost'
    DOMAIN = '127.0.0.1:7000'
    PROTOCOL = "http"
    DEFAULT_FROM_EMAIL = 'admin@example.com'
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'


# Custom user is defined here:
AUTH_USER_MODEL = 'users.TableTopUser'
# Allows users to login with email or username
AUTHENTICATION_BACKENDS = [
    'users.backends.EmailBackend',
    ]

# Application definition

INSTALLED_APPS = [
    'dal',
    'dal_select2',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'campaign.apps.CampaignConfig',
    'users.apps.UsersConfig',
    'django_summernote',
    'crispy_forms',
    'crispy_bootstrap5',
]

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"

CRISPY_TEMPLATE_PACK = "bootstrap5"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'stonetop_site.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "stonetop_site/templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'stonetop_site.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': env('DB_NAME'),
        'USER': env('DB_USER'),
        'PASSWORD': env('DB_PASSWORD'),
        'HOST': HOST,
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'static'

STATICFILES_DIRS = [
    BASE_DIR / "stonetop_site/static",
    BASE_DIR / 'static/'
    ]

STATICFILES_STORAGE = [
    'django.contrib.staticfiles.storage.StaticFilesStorage'
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_REDIRECT_URL = '/'

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media/'
X_FRAME_OPTIONS = 'SAMEORIGIN'

# Configure Django App for Heroku.
import django_on_heroku
django_on_heroku.settings(locals())
